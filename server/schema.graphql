type Schema {
  query: Query
  mutation: Mutation
}

type Query {
  getUserData(user: String!): UserData
  getPrivateChat(chat: String!): PrivateChat
  getTrade(trade: String!): Trade
}

type Mutation {
  editUser: String
}

#TypeDefs

type PokeVariableData {
  pokeLvl: Int!
  fastMove: String!
  chargeMove: String!
  isShiny: Boolean!
  appraisal: Int!
}

type PokeConstData {
  id: String!
  name: String!
  pokeNum: Int!
  sprite: String
  generation: Int!
}

type Username {
  username: String!
}

type UserCredentials {
  userID: String!
  email: String!
  username: Username!
  password: String!
  signUpDate: Date
}

type UserData {
  userID: String!
  username: Username!
  trainerID: Int!
  trainerName: String!
  mtgoID: String
  mtgoName: String
  latitude: Int
  longitude: Int
  buyerRating: Int!
  numBuyRatings: Int!
  sellerRating: Int!
  numSellRatings: Int!
  numOfStrikes: Int!
  privatechat: [PrivateChat]
}

type PrivateChat {
  chatID: String!
  seller: Username!
  buyer: Username!
  history: [Message]
}

type Message {
  messageID: String!
  from: Username!
  to: Username!
  content: String!
  publishDate: Date!
}

type Trade {
  tradeId: String!
  publishDate: Date!
  numViews: Int
  expirationDate: Date
  seller: Username!
  tradeItemID: String!
  tradeItemVariableData: PokeVariableData!
  price: Int!
  tax: Int
  buyer: Username!
  offerItemId: String!
  offerItemVariableData: PokeVariableData!
  tradeComplete: Boolean!
}

type Date {
  date: Int!
}
